# -- Habilitar la interfaz enp0s3 y crear Adaptador puente --
# Ves a la configuración de la máquina virtual, subapartado “Red” y selecciona la opción “Adaptador puente”.
# vi /etc/sysconfig/network-scripts/ifcfg-enp0s3
# Modifica la opción de “ONBOOT=no” a “ONBOOT=yes” y guarda los cambios.
# service network restart
# ----

# -- Instalación de SSH --
# yum –y install openssh-server openssh-clients
# systemctl start sshd
# systemctl enable sshd
# ----

# -- Instlación de Ansible --
# yum -y install epel-release
# yum -y install ansible
# yum -y update
# ----

# -- Generación de una clave SSH que punta al mismo ordenador --
# ssh-keygen
# Pulsa enter y introduce una frase.
# ssh-copy-id root@{ip}
# vi /etc/ansible/hosts
# En caso de que no funcione:
# ssh-copy-id -i root@{ip}
# ansible all -m ping -vvv
# Añade la IP del ordenador al que quieres apuntar
# mkdir Ansible
# ----

# -- Comando para instalar el playbook --
# ansible-playbook tools-node.yaml
# ----

# -- Herramientas instaladas --
#  git
#  JDK 16
#  Docker
#  Docker Compose
#  Helm
#  Kubernetes
#  Python 3
# ----
---
- name: Iniciando el entorno
  hosts: tools
  tasks:

  - name: Instalacion de Git
    yum:
      name: git
      state: present

  - name: Se crea una carpeta para las descargas
    ansible.builtin.file:
      path: /descargas
      state: directory

  - name: Instalando Wget
    yum:
      name: wget
      state: present

  - name: Instalando Java 11
    yum:
      name: java-11-openjdk-devel
      state: present

  - name: Instalando Curl
    yum:
      name: curl
      state: present

  - name: Instalando Docker
    yum:
      name: docker
      state: present

  - name: Descargando Docker-Compose
    shell: curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

  - name: Añadiendo los permisos a Docker-Compose
    shell: chmod +x /usr/local/bin/docker-compose

  - name: Iniciando servicio de Docker
    shell: systemctl start docker

  - name: Habilitando el servicio de arranque de Docker
    shell: systemctl enable docker

  - name: Instalando httpd
    yum:
      name: httpd
      state: present

  - name: Iniciando el servicio httpd
    ansible.builtin.systemd:
      name: httpd
      state: started
      enabled: yes

  - name: Creando carpeta para Kubernetes
    ansible.builtin.file:
      path: /kubernetes
      state: directory

  - name: Configurandio el repositorio de Kubernetes
    shell: |
      cat <<EOF > /etc/yum.repos.d/kubernetes.repo
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      EOF

  - name: Instalando kubelet
    yum:
      name: kubelet-1.20.0-0
      state: present

  - name: Instalando kubeadm
    yum:
      name: kubeadm-1.20.0-0
      state: present

  - name: Instalando kubectl
    yum:
      name: kubectl-1.20.0-0
      state: present

  - name: Iniciando el servicio kubelet y habilitandolo
    ansible.builtin.systemd:
      name: kubelet
      state: started
      enabled: yes

  - name: Configurando la red
    shell: |
      cat <<EOF > /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      EOF

  - name: Se modifica el kernel
    shell: sysctl --system

  - name: Se desactiva Selinux
    shell: setenforce 0

  - name: Se configura Selinux
    shell: sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

  - name: Se configura fstab
    shell: sed -i '/swap/d' /etc/fstab

  - name: Se desactiva swap
    shell: swapoff -a

  - name: Creando el alias k=kubectl
    lineinfile:
      path: ~/.bashrc
      line: alias k='kubectl'
      insertbefore: BOF

  - name: Creando el alias ksys=kubectl -n kube-sys
    lineinfile:
      path: ~/.bashrc
      line: alias ksys='kubectl -n kube-system'
      insertbefore: BOF

  - name: Creando carpeta para Helm
    shell: mkdir -p /Helm

  - name: Descargando Helm 3
    shell: curl -fsSL -o /Helm/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3

  - name: Otorgando permisos al instaldor
    shell: chdir=/Helm chmod 700 get_helm.sh

  - name: Ejecutando el script
    shell: chdir=/Helm ./get_helm.sh

  - name: Añadiendo el repositorio de kubernetes-metrics a Helm
    shell: helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/ -n kube-system

  - name: Instalando kubernetes-metrics desde helm
    shell: helm upgrade --install metrics-server metrics-server/metrics-server -n kube-system

  - name: Parando docker
    shell: systemctl stop docker

  - name: Instalando Python 3
    yum:
      name: python3
      state: present
